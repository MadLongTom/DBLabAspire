// <auto-generated />
using System;
using DBLabAspire.ApiService.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DBLabAspire.ApiService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241104054647_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DBLabAspire.ApiService.Models.Claims", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("Sno")
                        .HasColumnOrder(0);

                    b.Property<string>("CourseId")
                        .HasColumnType("CHAR(5)")
                        .HasColumnName("Cno")
                        .HasColumnOrder(1);

                    b.Property<short?>("Grade")
                        .HasColumnType("smallint")
                        .HasColumnName("Grade");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("CHAR(5)")
                        .HasColumnName("Semester");

                    b.Property<string>("TeachingClass")
                        .IsRequired()
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("Teachingclass");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("DBLabAspire.ApiService.Models.Course", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("CHAR(5)")
                        .HasColumnName("Cno");

                    b.Property<short>("Credit")
                        .HasColumnType("smallint")
                        .HasColumnName("Ccredit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)")
                        .HasColumnName("Cname");

                    b.Property<string>("PrerequisiteCourseId")
                        .HasColumnType("CHAR(5)")
                        .HasColumnName("Cpno");

                    b.HasKey("Id");

                    b.HasIndex("PrerequisiteCourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("DBLabAspire.ApiService.Models.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("Sno");

                    b.Property<DateTimeOffset>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Sbirthdate");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)")
                        .HasColumnName("Smajor");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("Sname");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("CHAR(6)")
                        .HasColumnName("Ssex");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Student");
                });

            modelBuilder.Entity("DBLabAspire.ApiService.Models.Claims", b =>
                {
                    b.HasOne("DBLabAspire.ApiService.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBLabAspire.ApiService.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DBLabAspire.ApiService.Models.Course", b =>
                {
                    b.HasOne("DBLabAspire.ApiService.Models.Course", "PrerequisiteCourse")
                        .WithMany()
                        .HasForeignKey("PrerequisiteCourseId");

                    b.Navigation("PrerequisiteCourse");
                });
#pragma warning restore 612, 618
        }
    }
}
